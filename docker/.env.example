# PostgreSQL Configuration
POSTGRES_USER=n8n
POSTGRES_PASSWORD=CHANGE_THIS_SECURE_PASSWORD
POSTGRES_DB=n8n
POSTGRES_NON_ROOT_USER=n8n
POSTGRES_NON_ROOT_PASSWORD=CHANGE_THIS_SECURE_PASSWORD

# n8n Configuration
N8N_HOST=n8n.yourdomain.com
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=CHANGE_THIS_SECURE_PASSWORD

# CRITICAL: Keep this key secure and consistent!
# If you're migrating, use the SAME key from your old instance
# Generate with: openssl rand -base64 32
N8N_ENCRYPTION_KEY=CHANGE_THIS_32_CHAR_ENCRYPTION_KEY

# Timezone Configuration
# Find your timezone: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
GENERIC_TIMEZONE=America/New_York
TZ=America/New_York

# Logging
N8N_LOG_LEVEL=info
N8N_LOG_OUTPUT=console

# n8n Features
N8N_PERSONALIZATION_ENABLED=true
N8N_DIAGNOSTICS_ENABLED=false
N8N_VERSION_NOTIFICATIONS_ENABLED=true

# Cloudflare Tunnel
# Get this token from Cloudflare Zero Trust dashboard
# Dashboard -> Access -> Tunnels -> Configure -> Copy tunnel token
CLOUDFLARE_TUNNEL_TOKEN=YOUR_CLOUDFLARE_TUNNEL_TOKEN_HERE

# Optional: Redis for queue (if scaling later)
# Uncomment and configure if you need queue mode
# QUEUE_BULL_REDIS_HOST=redis
# QUEUE_BULL_REDIS_PORT=6379
# QUEUE_BULL_REDIS_DB=0

# Optional: Watchtower notifications
# Uncomment to enable update notifications
# WATCHTOWER_NOTIFICATIONS=shoutrrr
# WATCHTOWER_NOTIFICATION_URL=discord://token@id
# Or other services: https://containrrr.dev/shoutrrr/v0.8/services/overview/

# ============================================
# MIGRATION NOTES
# ============================================
#
# If migrating from existing n8n instance:
# 1. Use the SAME N8N_ENCRYPTION_KEY from old instance
# 2. Set N8N_HOST to match your new domain
# 3. Update POSTGRES_PASSWORD to a new secure value
# 4. Keep timezone consistent with old instance
# 5. Verify WEBHOOK_URL matches N8N_HOST
#
# To get your old encryption key from K8s:
# kubectl get secret n8n-secret -o jsonpath='{.data.N8N_ENCRYPTION_KEY}' | base64 -d
