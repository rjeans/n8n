---
# Common role - System setup and configuration

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [common, packages]

- name: Upgrade all packages
  apt:
    upgrade: dist
    autoclean: yes
    autoremove: yes
  tags: [common, packages, upgrade]

- name: Install common packages
  apt:
    name:
      - curl
      - wget
      - git
      - vim
      - htop
      - unzip
      - ca-certificates
      - gnupg
      - lsb-release
      - python3
      - python3-pip
      - apt-transport-https
      - software-properties-common
    state: present
  tags: [common, packages]

- name: Set timezone
  timezone:
    name: "{{ timezone }}"
  tags: [common, timezone]

- name: Ensure data disk is mounted
  block:
    - name: Check if data disk is mounted
      command: mountpoint -q {{ data_base_dir }}
      register: disk_mounted
      failed_when: false
      changed_when: false

    - name: Display disk mount status
      debug:
        msg: "Data disk is {{ 'mounted' if disk_mounted.rc == 0 else 'NOT mounted' }} at {{ data_base_dir }}"

    - name: Fail if data disk is not mounted
      fail:
        msg: "Data disk is not mounted at {{ data_base_dir }}. Please check Terraform startup script."
      when: disk_mounted.rc != 0
  tags: [common, storage]

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ n8n_data_dir }}"
    - "{{ backup_dir }}"
    - "{{ app_base_dir }}"
    - "{{ n8n_app_dir }}"
  tags: [common, directories]

- name: Create PostgreSQL data directory
  file:
    path: "{{ postgres_data_dir }}"
    state: directory
    owner: 999
    group: 999
    mode: '0700'
  tags: [common, directories]

- name: Set up unattended upgrades
  block:
    - name: Install unattended-upgrades
      apt:
        name: unattended-upgrades
        state: present

    - name: Enable automatic security updates
      debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        value: 'true'
        vtype: boolean

    - name: Configure unattended-upgrades
      copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}-security";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          };
          Unattended-Upgrade::AutoFixInterruptedDpkg "true";
          Unattended-Upgrade::MinimalSteps "true";
          Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::Automatic-Reboot "false";
        mode: '0644'
  when: auto_updates_enabled
  tags: [common, security, updates]

- name: Install and configure fail2ban
  block:
    - name: Install fail2ban
      apt:
        name: fail2ban
        state: present

    - name: Copy fail2ban jail configuration
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 5

          [sshd]
          enabled = true
          port = {{ ssh_port }}
          logpath = %(sshd_log)s
        mode: '0644'
      notify: restart fail2ban

    - name: Ensure fail2ban is started and enabled
      service:
        name: fail2ban
        state: started
        enabled: yes
  tags: [common, security, fail2ban]
