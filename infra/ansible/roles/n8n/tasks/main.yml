---
# n8n role - Deploy n8n application stack

- name: Create n8n application directory
  file:
    path: "{{ n8n_app_dir }}"
    state: directory
    mode: '0755'
  tags: [n8n]

- name: Copy docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: "{{ n8n_app_dir }}/docker-compose.yml"
    mode: '0644'
  notify: restart n8n stack
  tags: [n8n, config]

- name: Copy .env file
  template:
    src: env.j2
    dest: "{{ n8n_app_dir }}/.env"
    mode: '0600'
  notify: restart n8n stack
  tags: [n8n, config, secrets]

- name: Ensure data directories have correct permissions
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(ansible_user) }}"
    group: "{{ item.group | default(ansible_user) }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "{{ n8n_data_dir }}", mode: '0755' }
    - { path: "{{ backup_dir }}", mode: '0755' }
    - { path: "{{ postgres_data_dir }}", owner: 999, group: 999, mode: '0700' }
  tags: [n8n, permissions]

- name: Pull Docker images
  command: docker compose pull
  args:
    chdir: "{{ n8n_app_dir }}"
  register: docker_pull_result
  changed_when: "'Downloaded' in docker_pull_result.stdout or 'Pulled' in docker_pull_result.stdout"
  tags: [n8n, deploy]

- name: Start n8n stack
  command: docker compose up -d
  args:
    chdir: "{{ n8n_app_dir }}"
  register: docker_up_result
  changed_when: "'Started' in docker_up_result.stderr or 'Created' in docker_up_result.stderr"
  tags: [n8n, deploy]

- name: Wait for PostgreSQL to be ready
  command: docker compose exec -T postgres pg_isready -U {{ postgres_user }}
  args:
    chdir: "{{ n8n_app_dir }}"
  register: pg_ready
  until: pg_ready.rc == 0
  retries: 30
  delay: 2
  changed_when: false
  tags: [n8n, deploy]

- name: Wait for n8n to be ready
  uri:
    url: "http://localhost:{{ n8n_port }}/healthz"
    status_code: 200
  register: n8n_ready
  until: n8n_ready.status == 200
  retries: 30
  delay: 2
  tags: [n8n, deploy]

- name: Get container status
  command: docker compose ps
  args:
    chdir: "{{ n8n_app_dir }}"
  register: container_status
  changed_when: false
  tags: [n8n]

- name: Display container status
  debug:
    msg: "{{ container_status.stdout_lines }}"
  tags: [n8n]

- name: Copy backup script
  template:
    src: backup.sh.j2
    dest: /usr/local/bin/n8n-backup
    mode: '0755'
  tags: [n8n, backup]

- name: Setup backup cron job
  cron:
    name: "n8n daily backup"
    minute: "{{ backup_schedule_minute }}"
    hour: "{{ backup_schedule_hour }}"
    job: "/usr/local/bin/n8n-backup >> /var/log/n8n-backup.log 2>&1"
    user: root
  tags: [n8n, backup, cron]

- name: Create log file for backups
  file:
    path: /var/log/n8n-backup.log
    state: touch
    mode: '0644'
  tags: [n8n, backup]
