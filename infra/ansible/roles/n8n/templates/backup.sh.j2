#!/bin/bash
# n8n Backup Script
# Generated by Ansible
# Managed at: {{ n8n_app_dir }}

set -euo pipefail

TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="{{ backup_dir }}/$TIMESTAMP"
APP_DIR="{{ n8n_app_dir }}"
RETENTION_DAYS={{ backup_retention_days }}

# Create backup directory
mkdir -p "$BACKUP_DIR"

# Backup PostgreSQL database
docker compose -f "$APP_DIR/docker-compose.yml" exec -T postgres \
    pg_dump -U {{ postgres_user }} {{ postgres_db }} > "$BACKUP_DIR/database.sql"

# Compress database backup
gzip "$BACKUP_DIR/database.sql"

# Backup n8n data directory
tar -czf "$BACKUP_DIR/n8n_data.tar.gz" -C {{ data_base_dir }} n8n

# Backup docker configurations
cp "$APP_DIR/docker-compose.yml" "$BACKUP_DIR/"
cp "$APP_DIR/.env" "$BACKUP_DIR/"

# Create manifest
cat > "$BACKUP_DIR/MANIFEST.txt" <<EOF
n8n Backup Manifest
===================
Backup Date: $(date)
Backup Path: $BACKUP_DIR

Contents:
---------
$(ls -lh "$BACKUP_DIR")

Database Size:
--------------
$(docker compose -f "$APP_DIR/docker-compose.yml" exec -T postgres \
    psql -U {{ postgres_user }} -d {{ postgres_db }} -c \
    "SELECT pg_size_pretty(pg_database_size('{{ postgres_db }}'));" -t 2>/dev/null || echo "N/A")

Workflow Count:
---------------
$(docker compose -f "$APP_DIR/docker-compose.yml" exec -T postgres \
    psql -U {{ postgres_user }} -d {{ postgres_db }} -t -c \
    "SELECT COUNT(*) FROM workflow_entity;" 2>/dev/null || echo "N/A")
EOF

# Cleanup old backups
find {{ backup_dir }} -maxdepth 1 -type d -mtime +$RETENTION_DAYS -exec rm -rf {} \;

echo "Backup completed: $BACKUP_DIR"
